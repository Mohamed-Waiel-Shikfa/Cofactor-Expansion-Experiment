# A is an n * n square matrix stored in row major order
# Therefore the determinant is calculated recursively
#	 using cofactor expansion always on the first row

from functools import cache

# Global mutable references for counting determinants of various sizes
count15 = 0
count14 = 0
count13 = 0
count12 = 0
count11 = 0

# Rests the global variables to have accurate logging over multiple tests
def reset ():
    global count15
    global count14
    global count13
    global count12
    global count11
    count15 = 0
    count14 = 0
    count13 = 0
    count12 = 0
    count11 = 0

# Logging function
def printCounts ():
    print()
    print("15x15: " + str(count15 - 1), end=" ")
    print("14x14: " + str(count14 - 1), end=" ")
    print("13x13: " + str(count13 - 1), end=" ")
    print("12x12: " + str(count12 - 1), end=" ")
    print("11x11: " + str(count11 - 1))


# Helper functions
@cache
def get_matrix_minor(matrix, col):
    # Returns the minor as a 2D tuple excluding the given row and column
    return tuple(
        tuple(matrix[r][c] for c in range(len(matrix)) if c != col)
        for r in range(len(matrix)) if r != 0
    )


# main code
@cache
def determinant(matrix):
    global count15
    global count14
    global count13
    global count12
    global count11

    n = len(matrix)  # Determine the matrix order
    if n == 17:
        count15 = count15 + 1
    elif n == 16:
        count14 = count14 + 1
    elif n == 15:
        count13 = count13 + 1
    # elif n == 12:
    #     count12 = count12 + 1
    # elif n == 11:
    #     count11 = count11 + 1

    if n > 14:
        printCounts()

    # Base case for 2x2 matrix
    if n == 2:
        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]

    # Recursive case
    res = 0
    for col in range(n):
        minor = get_matrix_minor(matrix, col)
        cofactor = ((-1) ** col) * matrix[0][col]
        # print(minor, cofactor, determinant(minor))
        res += cofactor * determinant(minor)
    return res


# Tests
# Comment and uncomment each of these to run tests to your liking

# A2 = ((1, 3), (2, 4))
# detA2 = determinant(A2)
# print(detA2)
# assert -2 == detA2
# reset ()


# A3 = ((9, 4, 3), (2, 5, 8), (7, 6, 1))
# detA3 = determinant(A3)
# print(detA3)
# assert -240 == detA3
# reset ()

# A5 = ( (1, 2, 3, 4, 5)
#   , (5, 4, 3, 2, 1)
#   , (2, 3, 4, 5, 1)
#   , (4, 5, 1, 2, 3)
#   , (3, 1, 5, 4, 2)
#   )
# detA5 = determinant(A5)
# print(detA5)
# assert -150 == detA5
# reset ()

# A10 = ( (5, 5, 3, 3, 9, 3, 7, 7, 7, 3)
#   , (9, 2, 6, 2, 8, 1, 2, 1, 8, 5)
#   , (10, 10, 10, 8, 2, 6, 3, 7, 1, 5)
#   , (9, 4, 9, 3, 1, 5, 1, 3, 6, 6)
#   , (4, 3, 1, 8, 9, 5, 1, 6, 3, 4)
#   , (10, 2, 7, 3, 6, 3, 1, 3, 1, 7)
#   , (4, 3, 4, 6, 10, 5, 5, 3, 3, 4)
#   , (5, 8, 1, 8, 7, 3, 10, 6, 7, 4)
#   , (9, 10, 7, 9, 1, 4, 3, 10, 9, 2)
#   , (10, 9, 1, 7, 6, 5, 4, 4, 1, 8)
#   )
# detA10 = determinant(A10)
# print(detA10)
# assert 48329415 == detA10
# reset ()

# A12 = (
# (2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2),
# (1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1),
# (2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2),
# (1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1),
# (1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2),
# (1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1),
# (1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1),
# (1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2),
# (1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1),
# (2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2),
# (1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1),
# (2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2)
# )
# detA12 = determinant(A12)
# print(detA12)
# assert 2 == detA12
# reset ()

# A12b = ( (9, 9, 5, 7, 2, 3, 3, 5, 8, 3, 3, 8)
#   , (7, 7, 5, 8, 3, 9, 6, 9, 2, 8, 2, 4)
#   , (8, 7, 5, 6, 8, 5, 8, 7, 6, 3, 3, 4)
#   , (3, 5, 8, 9, 4, 3, 2, 8, 6, 9, 3, 5)
#   , (8, 5, 6, 8, 2, 4, 8, 4, 2, 5, 4, 4)
#   , (2, 7, 6, 5, 2, 7, 3, 6, 6, 3, 5, 3)
#   , (8, 6, 6, 2, 9, 2, 4, 8, 3, 4, 7, 2)
#   , (4, 6, 6, 4, 2, 5, 3, 4, 3, 3, 2, 6)
#   , (5, 5, 2, 2, 6, 5, 2, 2, 6, 5, 2, 5)
#   , (4, 3, 2, 5, 2, 8, 2, 7, 3, 2, 2, 5)
#   , (3, 2, 8, 2, 8, 4, 6, 2, 4, 9, 3, 8)
#   , (8, 3, 2, 7, 5, 3, 8, 5, 2, 8, 7, 4)
#   )
# detA12b = determinant(A12b)
# print(detA12b)
# assert 2801572725 == detA12b
# reset ()

# A15 = ( (2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1)
#   , (2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1)
#   , (2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2)
#   , (1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2)
#   , (2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2)
#   , (2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1)
#   , (1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2)
#   , (1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1)
#   , (1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1)
#   , (2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2)
#   , (1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1)
#   , (2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2)
#   , (1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1)
#   , (2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1)
#   , (2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1)
#   )
# detA15 = determinant(A15)
# print(detA15)
# assert 4 == detA15
# reset ()

# A16 = ((1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1),
# (1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1),
# (2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1),
# (2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2),
# (1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2),
# (1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1),
# (1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1),
# (1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2),
# (1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2),
# (1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2),
# (1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2),
# (2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1),
# (2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1),
# (2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1),
# (1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1),
# (2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1))

# detA16 = determinant(A16)
# print(detA16)
# assert 143 == detA16
# reset ()


# A16b = ((2, 1, 6, 3, 3, 1, 3, 3, 2, 3, 5, 7, 8, 3, 6, 7),
# (2, 5, 7, 7, 7, 3, 4, 3, 8, 5, 8, 1, 3, 5, 4, 8),
# (7, 1, 8, 8, 8, 7, 2, 1, 5, 3, 3, 5, 1, 5, 4, 2),
# (5, 6, 8, 2, 1, 4, 1, 4, 3, 3, 2, 2, 3, 4, 7, 5),
# (7, 3, 2, 1, 4, 7, 1, 7, 6, 7, 6, 7, 7, 8, 7, 6),
# (3, 1, 1, 1, 3, 4, 2, 2, 7, 4, 8, 4, 3, 2, 5, 2),
# (3, 7, 2, 6, 1, 5, 1, 4, 7, 7, 1, 1, 6, 2, 7, 4),
# (2, 6, 1, 4, 4, 1, 5, 1, 4, 1, 6, 7, 6, 4, 6, 8),
# (5, 5, 6, 4, 4, 6, 4, 7, 8, 5, 4, 1, 4, 3, 2, 6),
# (7, 3, 6, 2, 8, 7, 7, 4, 4, 4, 3, 6, 3, 6, 2, 2),
# (2, 3, 3, 6, 8, 8, 7, 3, 6, 3, 6, 7, 8, 7, 2, 1),
# (5, 8, 5, 3, 4, 8, 8, 8, 3, 3, 4, 1, 3, 6, 6, 4),
# (3, 5, 2, 5, 3, 1, 8, 7, 5, 5, 1, 1, 8, 3, 5, 8),
# (7, 8, 5, 4, 6, 1, 2, 5, 1, 1, 8, 6, 6, 6, 5, 8),
# (6, 6, 4, 1, 8, 5, 6, 4, 7, 4, 2, 2, 2, 3, 5, 7),
# (6, 8, 1, 8, 3, 4, 8, 6, 4, 7, 1, 4, 6, 2, 7, 6))

# detA16b = determinant(A16b)
# print(detA16b)
# assert 83594817 == detA16b
# reset ()

A17 = ((7, 3, 4, 5, 1, 2, 6, 2, 6, 6, 5, 5, 3, 5, 7, 2, 7),
(5, 6, 3, 2, 4, 3, 3, 7, 3, 8, 7, 7, 4, 4, 1, 7, 3),
(6, 7, 6, 3, 5, 2, 2, 1, 8, 3, 7, 5, 5, 6, 6, 5, 7),
(2, 5, 1, 2, 4, 6, 1, 3, 5, 2, 7, 5, 3, 1, 2, 7, 1),
(6, 5, 6, 3, 3, 2, 7, 4, 8, 3, 8, 4, 1, 5, 6, 2, 5),
(2, 6, 6, 3, 3, 4, 2, 1, 5, 1, 7, 7, 4, 5, 4, 7, 1),
(8, 6, 2, 1, 1, 5, 4, 6, 3, 2, 4, 1, 4, 5, 7, 1, 1),
(8, 4, 4, 4, 4, 1, 3, 4, 5, 4, 5, 8, 8, 6, 3, 3, 1),
(1, 7, 8, 2, 7, 8, 5, 2, 3, 1, 2, 1, 3, 5, 2, 4, 1),
(7, 2, 2, 4, 2, 7, 1, 6, 1, 2, 8, 1, 3, 4, 4, 3, 7),
(2, 8, 2, 5, 2, 3, 1, 4, 4, 5, 2, 7, 8, 8, 8, 5, 2),
(4, 2, 1, 8, 6, 8, 6, 3, 3, 4, 4, 8, 7, 4, 4, 4, 8),
(5, 8, 2, 3, 3, 3, 6, 6, 5, 2, 5, 6, 3, 4, 8, 1, 7),
(2, 7, 2, 8, 3, 7, 1, 7, 4, 6, 8, 7, 4, 7, 6, 7, 6),
(1, 1, 4, 2, 4, 1, 6, 7, 4, 6, 5, 5, 7, 2, 2, 4, 2),
(6, 2, 2, 8, 8, 4, 3, 8, 6, 7, 6, 7, 6, 7, 2, 2, 6),
(6, 4, 2, 8, 8, 8, 4, 2, 1, 5, 2, 2, 7, 2, 2, 2, 5))

detA17 = determinant(A17)
print(detA17)
assert 957013116 == detA17
reset ()
